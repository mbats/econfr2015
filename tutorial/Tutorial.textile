h1. Sirius Workshop: Advanced graphical editors for your DSL

h2. 1- Overview

This tutorial explains how to use advanced features of Sirius:
* "Edge Creation Tool with preconditions":#Edge_Creation_Tool
* "Reconnect Edge Tool":#Reconnect_Edge_Tool
* "Delete Element Tool":#Delete_Element_Tool
* "Direct Edit Label Tool":#Direct_Edit_Label_Tool
* "SVG images":#SVG
* "Style Customization":#Style_Customization
* "Layers":#Layers
* "Filters":#Filters
* "Validation rules and Quick fixes":#Validation
* "Container with Sub Nodes and Bordered Nodes":#Container
* "Navigation through Double-click":#Double_Click
* "Table":#Table

The instructions start from a basic modeling tool that is the result of the Sirius "Starter Tutorial":https://wiki.eclipse.org/Sirius/Tutorials/4MinTutorial. This starting modeling tool just allows you to create diagrams which represent Men and Women linked by parental relationships. From this diagram you can also use the palette to create Men.

These instructions are based on a simple Domain Model which describes basic concepts about families.

The modeling workbench created with this tutorial will allow users to visualize the members of a family and their parental relationships on a graphical diagram. It will also provide tools to edit the model from the diagram.

!https://wiki.eclipse.org/images/1/16/Sirius_4mtuto_01.png!

h2(#Before_arriving). 2- Before arriving to the tutorial

To participate to this tutorial, you need to :

h3. 2.1- Install Obeo Designer 7

To download "Obeo Designer 7 Community Edition":http://www.obeodesigner.com/download
* "Windows 32 Bit":http://www.obeo.fr/download/release/designer/7.0/community/latest/packages/ObeoDesigner-Community-7.0-win32.win32.x86.zip / "64 Bit":http://www.obeo.fr/download/release/designer/7.0/community/latest/packages/ObeoDesigner-Community-7.0-win32.win32.x86_64.zip:"https://github.com/mbats/econfr2015/archive/master.zip"
* "Linux 32 Bit":http://www.obeo.fr/download/release/designer/7.0/community/latest/packages/ObeoDesigner-Community-7.0-linux.gtk.x86.zip / "64 Bit":http://www.obeo.fr/download/release/designer/7.0/community/latest/packages/ObeoDesigner-Community-7.0-linux.gtk.x86_64.zip
* "MacOS 64 Bit":http://www.obeo.fr/download/release/designer/7.0/community/latest/packages/ObeoDesigner-Community-7.0-macosx.cocoa.x86_64.zip

Then unzip ObeoDesigner-Community-7.0-xxx.xxx.xxx.zip

h3. Clone the tutorial Git repository

To clone "the tutorial git repository":https://github.com/mbats/econfr2015/:
* just download and unzip the provided zip: "TODO econfr2015.zip":TODO
* or clone it from the command line: @git clone @https://github.com/mbats/econfr2015.git@
* or clone it from Obeo Designer 7 with EGit: 
_File > Import..._:
!./images/sirius_tuto2_00-01.png!

_Git > Projects from Git_:
!./images/sirius_tuto2_00-02.png!

_Clone URI_:
!./images/sirius_tuto2_00-03.png!

Set @https://github.com/mbats/econfr2015.git@ in the field @URI@:
!./images/sirius_tuto2_00-04.png!
Then press _Next_ and select only the metamodel's related projects (see the next "Import the sample Domain Model projects":#Domain_Model section).

h3(#Domain_Model). Import the sample Domain Model projects

A modeling workbench allows users to create or visualize models of a given Domain Model defined with EMF (Ecore model).

This tutorial relies on a Domain Model (DSL) defining the basic concepts of families:

* A family is composed of several persons.
* Persons are men or women.
* A person has:
** a name,
** children,
** two parents,
** a father and a mother.
!https://wiki.eclipse.org/images/0/05/Sirius_4mtuto_02.png!

The domain model is implemented with several EMF projects that you need to import into your workspace.
Import these projects from the Git repository : _File > Import..._.
!./images/sirius_tuto2_00-01.png!

Select _Git > Projects from Git_
!./images/sirius_tuto2_00-02.png!

Select _Existing local repository_
!./images/sirius_tuto2_01-01.png!

Select @econfr2015@
!./images/sirius_tuto2_01-02.png!

Select _Import existing Eclipse projects_
!./images/sirius_tuto2_01-03.png!

And select only the following projects:
* org.eclipse.sirius.sample.basifamily = Metamodel
* org.eclipse.sirius.sample.basifamily.edit = Edit generated by EMF
* org.eclipse.sirius.sample.basifamily.editor = Editor generated by EMF
!./images/sirius_tuto2_01-04.png!

At the end your current environment should look like this:
!./images/sirius_tuto2_01-05.png!

h3. Open the Sirius development environment

h4. Launch a new runtime from your Eclipse

To launch a new eclipse application click on _Run / Run Configurations_ and double click on _Eclipse Application_ to get a @New_configuration@. In order to comfortably run Sirius in your new runtime, you should add this option in your VM arguments :

@-XX:MaxPermSize=256m@

!https://wiki.eclipse.org/images/d/d0/Sirius_4mtuto_03.png!

h4. Select the Sirius perspective

In the new Eclipse runtime, select the Sirius perspective.

!https://wiki.eclipse.org/images/8/8f/Sirius_4mtuto_06.png!

This perspective provides specific Sirius menus and a new kind of project (_Modeling Project_). A Modeling Project contains models and the corresponding graphical representations created with Sirius.

h4. Import a sample model and a basic odesign

A sample model is available from the git repository _File > Import... > Git > Projects from Git > Existing local repository > Add...> econfr2015 > Import existing Eclipse projects_. And select only the following projects:
* basifamily.sample = Model instance
* org.eclipse.sirius.sample.basifamily.design = Sirius specification project

!./images/sirius_tuto2_02-00.png!

Finally, your development environment should look like :
!./images/sirius_tuto2_02-00-1.png!

The wizard then installs a _Modeling Project_ containing a file named _example.basicfamily_.

!https://wiki.eclipse.org/images/9/99/Sirius_4mtuto_05-2.png!

Double-clicking on this sample model opens a tree editor generated by EMF.

This editor allows you to see the properties and relationships of the model elements.

!https://wiki.eclipse.org/images/d/de/Sirius_4mtuto_11.png!

A basic designer exists which already displays Men, Women and child relationship. It also provides a tool to create Men.

This designer is available in the project :
!./images/sirius_tuto2_02-00-2.png!

Before starting to extend this tool, first use it to create a diagram on the sample model: you will see this diagram evolve progressively with new features during this tutorial.

To activate this tool, open the _Viewpoints Selection_ wizard on the modeling project containing the sample model.

!./images/sirius_tuto2_02-01.png!

Then select the _persons_ viewpoint.

!./images/sirius_tuto2_02-02.png!

Now you can create a diagram on the Family object: menu _New Representation_.

!./images/sirius_tuto2_02-03.png!

h2. 3- Start the tutorial

h3. Creation tool

The first step of this tutorial consists in completing the basic modeler with a tool to create _Women_ also.

Copy and paste the tool _CreateMan_, then replace Man by _Woman_:
* in the *Id* of the tool
* in the *Node Mappings* of the tool (use the wizard to select WomanNode)  
* in the *Create Instance* operation (under the Begin section)
* in the *Value Expression* of the Set @name@ (under the Create instance)

!./images/sirius_tuto2_03-01.png!

At any moment during the tutorial, to see the differences between your _working on_ version and the expected one you can do a @git diff@. For example, when you are on the @initial_state@ you can do:
* from the command : git diff 

To see the result have a look on the commit : @Creation tool@

h3(#Edge_Creation_Tool). Edge Creation Tool

An _Edge Creation_ tool allows the user to create relationships directly from the diagram, by using the palette.

Let's use this tool to allow the user to set the father and the mother of a Person.

Right click on the _Section_ and select the menu 'New Element Creation > Edge Creation'

!./images/sirius_tuto2_04-01.png!

Give an Id to this tool (setFather) and associate it to _fatherEdge_, the _Edge Mapping_ which defines the father graphical relation.

!./images/sirius_tuto2_04-02.png!

Then define the operations that will be performed by this tool each time the user will click on it. These operations can use four variables that are automatically set by Sirius:
* **source**: the first object on which the user has clicked (the source of the relation is is going to create)
* **target**: the second object on which the user has clicked (the target of the relation is is going to 
* **sourceView**: the graphical object representing the source
* **targetView**: the graphical object representing the target

Under the _Begin_ object, create a _Change Context_ and set its _Browse Expression_ to _var:source_ in order to define the execution context of the next operations.

!./images/sirius_tuto2_04-03.png!

!./images/sirius_tuto2_04-04.png!

Under the _Change Context_ create a _Set_ which will set the _father_ of the first Person clicked (source) to the second Person clicked (target):
* Feature Name: father
* value Expression: var:target 

!./images/sirius_tuto2_04-05.png!

!./images/sirius_tuto2_04-06.png!

Save the _odesign_ file and you will see a new tool _setFather_ in the palette.

!./images/sirius_tuto2_04-07.png!

h4. Precondition

To prevent the user to create a father relationship from a person to itself, or to one of its children, you can add a precondition expression (written in Acceleo 3).

!./images/sirius_tuto2_04-08.png!

This expression uses to new variables:
* **preSource**: the object on which the user has clicked first
* **preTarget**: the object under the cursor

With this precondition, the tool will prevent the creation of forbidden links by showing a specific icon.

!./images/sirius_tuto2_04-09.png!

Then copy, paste and update this tool to create the _setMother_ tool.

h3. Precondition

To see the result have a look on the commit : @Edge creation tool precondition@

h3(#Reconnect_Edge_Tool). Reconnect Edge Tool

A _Reconnect Edge_ tool allows the user to change the end of a relationship by moving it directly from the diagram.

Let's create a _Reconnect Edge_ tool to change the _father_ and the _mother_ of a Person.

Right click on the _Section_ and select the menu 'New Element Edition > Reconnect Edge'

!./images/sirius_tuto2_05-01.png!

Associate the _fatherEdge_ to this reconnect tool.

!./images/sirius_tuto2_05-02.png!

This tool comes with six variables:
* **source**: the object currently attached to the moved end
* **target**: the object going to be attached to the moved end
* **sourceView**: the graphical object representing source
* **targetView**: the graphical object representing target
* **element**: the object attached to the other end
* **elementView**: the graphical object representing element

Then create a _Change Context_ and set its expression to _var:element_ (the person who will change its father) 

Finally, create a _Set_ to assign the new selected parent (_var:target_) as _father_ of this person.

!./images/sirius_tuto2_05-03.png!

Copy, paste and update this tool to create a reconnect tool for _mother_ relationship.

A Reconnect Edge tool allows the user to change the end of a relationship by moving it directly from the diagram.

Let's create a reconnect edge tool to change the father and the mother of a person.

Right click on the Section and select the menu 'New Element Edition > Reconnect Edge'

sirius_tuto2_05_01.png

Associate the fatherEdge to this reconnect tool.

sirius_tuto2_05_02.png

This tool comes with six variables:
* **source**: the object currently attached to the moved end
* **target**: the object going to be attached to the moved end
* **sourceView**: the graphical object representing source
* **targetView**: the graphical object representing target
* **element**: the object attached to the other end
* **elementView**: the graphical object representing element

Then create a _Change Context_ and set its expression to _var:element_ (the person who will change its father) 

Finally, create a _Set_ to assign the new selected parent (_var:target_) as _father_ of this person.

sirius_tuto2_05-03.png

Copy, paste and update this tool to create a reconnect tool for _mother_ relationship.

To see the result have a look on the commit : @Reconnect edge tool@


h3(#Delete_Element_Tool). Delete Element Tool

A _Delete Element_ tool specifies which actions have to be performed when the user hits the delete key on an diagram element.

It is necessary on elements which deletion can't be interpreted by Sirius (for example edges) or if you need to perform specific actions.

Let's create a _Delete Element_ tool to specify what to do when the user deletes a paretal relation.

Right click on the _Section_ and select the menu 'New Element Edition > Delete Element'

!./images/sirius_tuto2_06-01.png!

Associate the _fatherEdge_ to this Delete tool.

!./images/sirius_tuto2_06-02.png!

When deleting a edge, the variable **element** refers to the source of the relationship.

So, create a _Change Context_ and set its expression to _var:element_ (the person which is the children). Then create a _Unset_ on the feature _father_ to remove this relation.


!./images/sirius_tuto2_06-03.png!

Copy, paste and update this tool to create a delete tool for _mother_ relationship.

To see the result have a look on the commit : @Delete element tool@

h3(#Direct_Edit_Label_Tool). Direct Edit Label Tool

A _Direct Edit Label_ specifies how to interpret the modification of graphical object's label in order to modify the model. 

Let's create a _Direct Edit Label_ to change the name of a Person directly from the diagram.

Right click on the _Section_ and select the menu 'New Element Edition > Direct Edit Label'

!./images/sirius_tuto2_07-01.png!

Associate this tool to the objects which have a name: _ManNode_ and _WomanNode_

!./images/sirius_tuto2_07-02.png!

This tool comes with a mask that creates variables depending on the label's value. By default, the mask is set to _{O}_, which means that the variable named _0_ will contain the full value of the label.  

Create a _Set_ to indicate the feature of the edited object that will be modified (_name_) and the value to assign (_var:0_).

!./images/sirius_tuto2_07-03.png!

To see the result have a look on the commit : @Direct edit label tool@

h3(#SVG). SVG

Sirius supports SVG images to improve the quality of the diagrams.

Because the current designer uses PNG images, resizing a Man or Woman on a diagram causes the pixelation of images.

!./images/sirius_tuto2_08-01.png!

Add _man.svg_ and _woman.svg_ in the _icons_ folder. TODO These SVG images are available on TODO.

!./images/sirius_tuto2_08-02.png!

Then replace these PNG images set to the styles of _ManNode_ and _WomanNode_ by SVG images. 

!./images/sirius_tuto2_08-03.png!

Finally, set a predefined size to adapt the SVG image to the same size than the 32x32 PNG image (here enter 4).

!./images/sirius_tuto2_08-04.png!

Close and re-open the diagram to allow Sirius to take the modification into account: now the images are no more pixelated.

!./images/sirius_tuto2_08-05.png!

To see the result have a look on the commit : @SVG@

h3(#Style_Customization). Style Customization

Style Customizations change graphical properties of diagram elements (color, label, size, ...) depending on conditions.

For example, let's change the label of a Person depending on the number of its children:
* Person without children => color label in gray
* Person having more than one children => set label size to 12
* Person having grandchildren => prefix label with 'Grandpa' or 'Grandma'

Right click on the _Default Layer_ and select the menu 'New Customization > Style Customizations'. It will group all the different customizations.

!./images/sirius_tuto2_09-01.png!

Right click on the _Style Customizations_ and select the menu 'New Customization > Style Customization' to create the first customization.

!./images/sirius_tuto2_09-02.png!

Enter the Acceleo3 expression associated to this customization: _[children->size()=0/]_, then define the graphical properties that will change if the condition is met.

Right click on the _Style Customization_ and select the menu 'New Customization'. To change the label color, create a _Property Customization (by selection)_. 

!./images/sirius_tuto2_09-03.png!

On this _Property Customization_, select the two Workspace Images for the _Applied On_ field (they hold the label to change), enter _labelColor_ in the Property Name field, then select the _gray_ color.

Note that you can use the automatic-completion to select the applicable property.

!./images/sirius_tuto2_09-04.png!

Create a second _Style Customizations_ with the condition _[children->size()>1/]_ and add a _Style Customization (by expression)_ to set the _labelSize_ to _12_.

!./images/sirius_tuto2_09-05.png!

Finally, create a third _Style Customizations_ with the condition _[children.children->size()>0/]_. Add a _Style Customization (by expression)_ for the _Workspace Image_ corresponding to the Man, enter the property name _labelExpression_ and the expression _['Grandpa '+name/]_ (to prefix the person name with 'Grandpa').

!./images/sirius_tuto2_09-06.png!

Do the same with the Woman image and the expression _['Grandma '+name/]_

Save the odesign file and see the result on the diagram.

!./images/sirius_tuto2_09-07.png!

To see the result have a look on the commit : @Style customization@

h3(#Layers). Layers

With Sirius it is possible to allocate the specific graphical elements to layers that can be activated/deactivated on demand by the user.

Let's create two layers: one for the Men and one for the Women.

Right click on _Persons diagram_ and select the menu 'New Diagram Element > Additional Layer'. 

!./images/sirius_tuto2_10-01.png!

Call this _Layer_ 'Men' and check the option _Active by default_.

!./images/sirius_tuto2_10-02.png!

Create a _Section_ in this layer then drag and drop all the elements related to the Man type into this layer.

!./images/sirius_tuto2_10-03.png!

Create a second _Layer_ 'Women' and drag and drop all the elements related to the Woman type.

Re-open the sample diagram. You can see the two optional layers Men and Women (selected by default).

!./images/sirius_tuto2_10-04.png!

If you de-activate the Men layer, only women remain on the diagram. Note that the tools related to men have been hidden too.

!./images/sirius_tuto2_10-05.png!

To see the result have a look on the commit : @Layer@

h3(#Filters). Filters

To see the result have a look on the commit : @Filter@

h3(#Validation). Validation

h3. Semantic Validation Rule

h4. Audit

To see the result have a look on the commit : @Validation@

h4. Fix

To see the result have a look on the commit : @Validation fix@

h3. Object-Centered Diagram

h4(#Container). Container

To see the result have a look on the commit : @Container@

h4. Sub Node

To see the result have a look on the commit : @Sub node@

h4. Border Node

To see the result have a look on the commit : @Border node@

h4. Edge between containers

To see the result have a look on the commit : @Edge between containers@

h3(#Double_Click). Double-click

To see the result have a look on the commit : @Double click@

h3(#Table). Table

h3. Line

To see the result have a look on the commit : @Table Line@

h3. Feature Column

To see the result have a look on the commit : @Feature column@
